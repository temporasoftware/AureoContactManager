@page
@model WebApp.Pages.Contacts.EditModel
@{
}

<h2>@(Model.EditMode == WebApp.Helpers.EditPageHelpers.EditPageMode.Edit ? "Edit Contact" : "Create New Contact")</h2>

@{
    var disabledAttribute = new { disabled = "disabled", @class="form-control" };
    var normalAttribute = new { cargo = "form-control", @class = "form-control" };
}

<form method="post">
    <div class="validation-summary-errors">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>

    <input type="hidden" asp-for="Contact.Id" />

    <div class="form-group mb-3">
        <label for="Name">Name:</label>
        @Html.TextBox("Contact.Name", null, Model.EditMode == WebApp.Helpers.EditPageHelpers.EditPageMode.View ? disabledAttribute :normalAttribute)
        <span asp-validation-for="Contact.Name" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label for="Contact">Contact:</label>
        @Html.TextBox("Contact.Contact", null, Model.EditMode == WebApp.Helpers.EditPageHelpers.EditPageMode.View ? disabledAttribute :normalAttribute)
        <span asp-validation-for="Contact.Contact" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label for="Email">Email:</label>
        @Html.TextBox("Contact.Email", null, Model.EditMode == WebApp.Helpers.EditPageHelpers.EditPageMode.View ? disabledAttribute :normalAttribute)
        <span asp-validation-for="Contact.Email" class="text-danger"></span>
    </div>
    <a class="btn btn-warning" asp-page="./Index" asp-route-id="">Cancel</a>
    @if (Model.EditMode != Helpers.EditPageHelpers.EditPageMode.View)
    {
        <button class="btn btn-primary" type="submit">@(Model.EditMode == WebApp.Helpers.EditPageHelpers.EditPageMode.Edit ? "Save Changes" : "Save New")</button>
    }
</form>